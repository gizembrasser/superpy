import csv
import os
import sys
from datetime import datetime
import uuid

# Add grandparent directory to sys.path to be able to import from 'core' folder.
grandparent_dir = os.path.dirname(os.path.dirname(__file__))
sys.path.append(grandparent_dir)

from core.constants import DATE_FORMAT, BOUGHT_FILE, BOUGHT_HEADER
from services.dates import get_today
from utils.numbers import is_positive_number


# Function that takes attributes of a product as arguments, adds the product to BOUGHT_FILE.
def buy_product(product_name, buy_price, count, expiration_date_str):
    if not is_positive_number(buy_price, count):
        print("Please enter a positive number for --buy_price and --count.")
        return None
    
    buy_date = get_today()
    # Convert expiration_date_str into datetime object.
    expiration_date = datetime.strptime(expiration_date_str, DATE_FORMAT)

    # Check if there's already a bought product with the same product_name.
    # If yes, append the 'count' column of that product by adding the amount of products purchased.
    with open(BOUGHT_FILE, mode="r") as f:
        reader = csv.DictReader(f)
        # Convert the content of the BOUGHT_FILE into a list of dictionaries.
        bought = list(reader)

        # List comprehension to filter the BOUGHT_FILE based on the product_name.
        filtered_bought = [
            item
            for item in bought 
            if (
                item["product_name"] == product_name
                and float(item["buy_price"]) == buy_price
            )
        ]

    # If product has been purchased before, it should've ended up in filtered_bought.
    if len(filtered_bought) > 0:
        print(f"Product already in stock, added {count} to existing stock.")
        bought.remove(filtered_bought[0])

        filtered_bought[0]["count"] = int(filtered_bought[0]["count"]) + count
        bought.extend(filtered_bought)
        
        with open(BOUGHT_FILE, mode="w", newline="") as f:
            writer = csv.DictWriter(f, fieldnames=BOUGHT_HEADER)
            writer.writeheader()
            writer.writerows(bought)
    else: 
        data = {
            # Random id number generated by uuid.
            "id": uuid.uuid4(),
            "product_name": product_name,
            "buy_date": buy_date,
            "buy_price": buy_price,
            "count": count,
            "expiration_date": expiration_date.strftime(DATE_FORMAT)
        }

        # Appends the BOUGHT_FILE with the new bought product.
        with open(BOUGHT_FILE, mode="a", newline="") as f:
            writer = csv.writer(f)
            writer.writerow(data.values())
        

"""buy_product("orange", 0.6, 300, "2024-01-10")"""